temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data)
}
dim(all_data);
head(all_data);
or (x in 1:21) {
print(x);
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
for (x in 1:21) {
print(x);
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
head(all_data);
summary(all_data);
all_data
for (x in 21:1) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
head(all_data);
summary(all_data);
for (x in 1:21) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
all_data = data.frame()
for (x in 1:21) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
head(all_data);
summary(all_data);
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
all_data = data.frame()
for (x in 1:21) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
all_data = data.frame()
all_data2 = data.frame()
for (x in 1:21) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
head(all_data);
all_data = data.frame()
all_data2 = data.frame()
for (x in 21:1) {
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
dim(all_data);
head(all_data);
summary(all_data);
all_data$response <- as.factor(all_data$response);
all_data$condition <- as.factor(all_data$condition);
# import participant files
all_data = data.frame()
all_data2 = data.frame()
for (x in 21:1) { # for 21 participants
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
# initial data frame structure look
dim(all_data);
head(all_data);
summary(all_data);
all_data$response <- as.factor(all_data$response);
all_data$condition <- as.factor(all_data$condition);
# RT plot with all pilot 1
plot(density(all_data[sbjID==1]$RT),xlim=c(0,1750),ylim=c(0,0.0055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
# RT plot with all pilot 1
plot(density(all_data$RT[sbjID==1]),xlim=c(0,1750),ylim=c(0,0.0055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.0055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==6]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==7]),col="#CC79A7");
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.55),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
summary(all_data);
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==6]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==7]),col="#CC79A7");
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==6]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==7]),col="#CC79A7");
legend("topright",title="Participant:",c("1","2","3","4","5","6","7"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),bty = "n",
cex=0.75,y.intersp=0.5);
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,1750),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
# RT plot with all pilot 1
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,16000),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==6]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==7]),col="#CC79A7");
legend("topright",title="Participant:",c("1","2","3","4","5","6","7"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),bty = "n",
cex=0.75,y.intersp=0.5);
# scores & RTs with all participants
scores <- list(42.5,57.5,35.0,42.5,50.0,37.5,52.5);
mean_RTs <- list(344.5735,461.22575,187.264,505.766,260.111,211.34025,530.5685);
plot(unlist(mean_RTs),unlist(scores),pch=16);
plot(density(all_data$RT[all_data$sbjID == 3],bw=20));
all_data$correct <- 0;
all_data$correct[all_data$expected!=all_data$observed] <- 1;
library(ggplot2)
library(ggpubr)
ggscatter(all_data, aes(x = "RT", y = "correct"));
plot(correct ~ RT, data = all_data)
plot(all_data$RT[all_data$sbjID==1],all_data$correct[all_data$sbjID==1],xlim=c(0,1500));
points(all_data$RT[all_data$sbjID==2],all_data$correct[all_data$sbjID==2]);
points(all_data$RT[all_data$sbjID==3],all_data$correct[all_data$sbjID==3]);
points(all_data$RT[all_data$sbjID==4],all_data$correct[all_data$sbjID==4]);
points(all_data$RT[all_data$sbjID==5],all_data$correct[all_data$sbjID==5]);
points(all_data$RT[all_data$sbjID==6],all_data$correct[all_data$sbjID==6]);
points(all_data$RT[all_data$sbjID==7],all_data$correct[all_data$sbjID==7]);
# d'
dPrime <- function(sbj, expectedResp, observedResp)
{
sbjNumbers <- unique(sbj);
dprimes <- vector(length=length(sbjNumbers), mode="numeric");
bias <- vector(length=length(sbjNumbers), mode="numeric");
subjects <- vector(length=length(sbjNumbers), mode="integer");
counter<-1;
for (s in sbjNumbers)
{
contingencyTable <- xtabs(~ expectedResp[sbj==s] + observedResp[sbj==s]);
percVector <- contingencyTable[,2] / xtabs(~ expectedResp[sbj==s]);
nTrials <- length(expectedResp);
zhr <- ifelse( percVector[2]==1, qnorm( 1-(1/(2*nTrials))), qnorm(percVector[2]));
zfar <- ifelse(percVector[1]==0, qnorm( 1/(2*nTrials) ), qnorm(percVector[1]));
dprimes[counter] <- round(zhr - zfar, digits = 3);
bias[counter] <- exp(-zhr*zhr/2+zfar*zfar/2);
subjects[counter] <- s;
counter <- counter+1;
};
print(data.frame(sbj=subjects, dprime=dprimes, bias=bias));
}
dprimes <- dPrime(all_data$sbjID,all_data$expected,all_data$observed);
# d' function
dPrime <- function(sbj, expectedResp, observedResp)
{
sbjNumbers <- unique(sbj);
dprimes <- vector(length=length(sbjNumbers), mode="numeric");
log_beta <- vector(length=length(sbjNumbers), mode="numeric");
c <- vector(length=length(sbjNumbers), mode="numeric");
subjects <- vector(length=length(sbjNumbers), mode="integer");
counter<-1;
for (s in sbjNumbers)
{
contingencyTable <- xtabs(~ expectedResp[sbj==s] + observedResp[sbj==s]);
percVector <- contingencyTable[,2] / xtabs(~ expectedResp[sbj==s]);
nTrials <- length(expectedResp);
zhr <- ifelse( percVector[2]==1, qnorm( 1-(1/(2*nTrials))), qnorm(percVector[2]));
zfar <- ifelse(percVector[1]==0, qnorm( 1/(2*nTrials) ), qnorm(percVector[1]));
dprimes[counter] <- round(zhr - zfar, digits = 3);
log_beta[counter] <- round((zfar^2 - zhr^2)/2, digits = 3); #this is taken from Stanislaw and Todorov, PBR 1999. Log_beta=0 indicates no bias; negative values is bias for YES; positive values is bias for NO
c[counter] <- round( -(zhr + zfar)/2, digits = 3); # this is taken again from Stanislaw and Todorov, PBR 1999, who note that c "...assumes that subjects respond yes when the decision variable exceeds the criterion and no otherwise; responses are based directly on the decision variable, which some researchers regard as more plausible than assuming that responses are based on a likelihood ratio [which the assumption behind beta] (Richardson, 1994). Another advantage of c is that it is unaffected by changes in d', whereas {3 is not (Ingham, 1970; Macmil- lan, 1993; McNicol, 1972, pp. 63--64)". Similarly to log_beta, c=0 is no bias, negative c is bias for YES, negative c is bias for NO.
subjects[counter] <- s;
counter <- counter+1;
};
print(data.frame(sbj=subjects, dprime=dprimes, log_beta=log_beta, c=c));
}
dprimes <- dPrime(all_data$sbjID,all_data$expected,all_data$observed);
sbjNumbers
sbjNumbers <- unique(sbj);
dprimes <- dPrime(all_data$sbjID,all_data$expected,all_data$observed);
sbjNumbers <- unique(all_data$sbjID);
dprimes <- vector(length=length(sbjNumbers), mode="numeric");
log_beta <- vector(length=length(sbjNumbers), mode="numeric");
c <- vector(length=length(sbjNumbers), mode="numeric");
subjects <- vector(length=length(sbjNumbers), mode="integer");
counter <- 1;
for (s in sbjNumbers)
{
contingencyTable <- xtabs(~ expectedResp[sbj==s] + observedResp[sbj==s]);
percVector <- contingencyTable[,2] / xtabs(~ expectedResp[sbj==s]);
nTrials <- length(expectedResp);
zhr <- ifelse( percVector[2]==1, qnorm( 1-(1/(2*nTrials))), qnorm(percVector[2]));
zfar <- ifelse(percVector[1]==0, qnorm( 1/(2*nTrials) ), qnorm(percVector[1]));
dprimes[counter] <- round(zhr - zfar, digits = 3);
log_beta[counter] <- round((zfar^2 - zhr^2)/2, digits = 3); #this is taken from Stanislaw and Todorov, PBR 1999. Log_beta=0 indicates no bias; negative values is bias for YES; positive values is bias for NO
c[counter] <- round( -(zhr + zfar)/2, digits = 3); # this is taken again from Stanislaw and Todorov, PBR 1999, who note that c "...assumes that subjects respond yes when the decision variable exceeds the criterion and no otherwise; responses are based directly on the decision variable, which some researchers regard as more plausible than assuming that responses are based on a likelihood ratio [which the assumption behind beta] (Richardson, 1994). Another advantage of c is that it is unaffected by changes in d', whereas {3 is not (Ingham, 1970; Macmil- lan, 1993; McNicol, 1972, pp. 63--64)". Similarly to log_beta, c=0 is no bias, negative c is bias for YES, negative c is bias for NO.
subjects[counter] <- s;
counter <- counter+1;
};
data <- read.table("C:/Users/annal/Downloads/dPrimes_test_data.R")
data <- read.table("C:/Users/annal/Downloads/dPrimes_test_data.R",header=T,sep=",")
n_trials <- 60; #this is a free parameter, how many trials you'd like each subject to have
expectedResp <- rep(c(0,1), each=n_trials/2);
mr_perfect <- data.frame(sbj=rep("mr_perfect",n_trials),
expectedResp=expectedResp,
observedResp=rep(c(0,1), each=n_trials/2)
); #this guy is just perfect, 100% accuracy with no bias
mr_random <- data.frame(sbj=rep("mr_random",n_trials),
expectedResp=expectedResp,
observedResp=rep( rep(c(0,1), each=n_trials/4), 2)
); #this guy is complete disaster, completely random, but again with no bias
mr_random_yes_bias <- data.frame(sbj=rep("mr_random_yes_bias",n_trials),
expectedResp=expectedResp,
observedResp=rep(rep(c(0,1), times=c(n_trials/2*.40, n_trials/2*.60)),2)
);
mr_random_no_bias <- data.frame(sbj=rep("mr_random_no_bias",n_trials),
expectedResp=expectedResp,
observedResp=rep(rep(c(0,1), times=c(n_trials/2*.60, n_trials/2*.40)),2)
);
mr_good_zero_bias <- data.frame(sbj=rep("mr_good_zero_bias",n_trials),
expectedResp=expectedResp,
observedResp=c( rep(c(0,1), times=c(n_trials/2*.70, n_trials/2*.30)), rep(c(0,1), times=c(n_trials/2*.30, n_trials/2*.70)))
); #this guy is quite good, with 70% accuracy both on YES and NO trials, so no bias
mr_good_yes_bias <- data.frame(sbj=rep("mr_good_yes_bias",n_trials),
expectedResp=expectedResp,
observedResp=c( rep(c(0,1), times=c(n_trials/2*.60, n_trials/2*.40)), rep(c(0,1), times=c(n_trials/2*.20, n_trials/2*.80)))
); #this guy is as good as above, with 70% baseline accuracy. However, he tends to say a bit more YES than NO, so I've added .10 YES responses both on YES and NO trials
mr_better_yes_bias <- data.frame(sbj=rep("mr_better_yes_bias",n_trials),
expectedResp=expectedResp,
observedResp=c( rep(c(0,1), times=c(n_trials/2*.70, n_trials/2*.30)), rep(c(0,1), times=c(n_trials/2*.10, n_trials/2*.90)))
); #this guy is a bit better than the previous one, with 80% baseline accuracy and the same bias (.10 more YES responses, the same as above). I'm trying this because Stanislaw and Todorov (PBR 1999) says that log_beta depends on d-prime, while c doesn't, so c should remain the same as per the participant above, but log_beta should change
mr_good_no_bias <- data.frame(sbj=rep("mr_good_no_bias",n_trials),
expectedResp=expectedResp,
observedResp=c( rep(c(0,1), times=c(n_trials/2*.80, n_trials/2*.20)), rep(c(0,1), times=c(n_trials/2*.40, n_trials/2*.60)))
); #this guy is as good as above again, with 70% accuracy. However, he tends to say a bit more NO than YES, so I've added .10 NO responses both on YES and NO trials
mr_better_no_bias <- data.frame(sbj=rep("mr_better_no_bias",n_trials),
expectedResp=expectedResp,
observedResp=c( rep(c(0,1), times=c(n_trials/2*.90, n_trials/2*.10)), rep(c(0,1), times=c(n_trials/2*.30, n_trials/2*.70)))
); #this guy is a bit better than the previous one, with 80% baseline accuracy and the same bias (.10 more NO responses, the same as above).
data <- rbind(mr_perfect, mr_random, mr_random_yes_bias, mr_random_no_bias, mr_good_zero_bias, mr_good_yes_bias, mr_better_yes_bias, mr_good_no_bias, mr_better_no_bias);
dPrime <- function(sbj, expectedResp, observedResp)
{
sbjNumbers <- unique(sbj);
dprimes <- vector(length=length(sbjNumbers), mode="numeric");
log_beta <- vector(length=length(sbjNumbers), mode="numeric");
c <- vector(length=length(sbjNumbers), mode="numeric");
subjects <- vector(length=length(sbjNumbers), mode="integer");
counter <- 1;
for (s in sbjNumbers)
{
contingencyTable <- xtabs(~ expectedResp[sbj==s] + observedResp[sbj==s]);
percVector <- contingencyTable[,2] / xtabs(~ expectedResp[sbj==s]);
nTrials <- length(expectedResp);
zhr <- ifelse( percVector[2]==1, qnorm( 1-(1/(2*nTrials))), qnorm(percVector[2]));
zfar <- ifelse(percVector[1]==0, qnorm( 1/(2*nTrials) ), qnorm(percVector[1]));
dprimes[counter] <- round(zhr - zfar, digits = 3);
log_beta[counter] <- round((zfar^2 - zhr^2)/2, digits = 3); #this is taken from Stanislaw and Todorov, PBR 1999. Log_beta=0 indicates no bias; negative values is bias for YES; positive values is bias for NO
c[counter] <- round( -(zhr + zfar)/2, digits = 3); # this is taken again from Stanislaw and Todorov, PBR 1999, who note that c "...assumes that subjects respond yes when the decision variable exceeds the criterion and no otherwise; responses are based directly on the decision variable, which some researchers regard as more plausible than assuming that responses are based on a likelihood ratio [which the assumption behind beta] (Richardson, 1994). Another advantage of c is that it is unaffected by changes in d', whereas {3 is not (Ingham, 1970; Macmil- lan, 1993; McNicol, 1972, pp. 63--64)". Similarly to log_beta, c=0 is no bias, negative c is bias for YES, negative c is bias for NO.
subjects[counter] <- s;
counter <- counter + 1;
};
print(data.frame(sbj=subjects, dprime=dprimes, log_beta=log_beta, c=c));
}
View(data)
dprimes <- dPrime(data$sbj, data$expectedResp, data$observedResp)
summary(all_data)
all_data$expected <- 0
all_data$expected[all_data$condition == 1] <- 1
head(all_data)
all_data$observed <- 0
all_data$observed[all_data$response == no] <- 1
all_data$observed[all_data$response == "no"] <- 1
head(all_data)
# d' function
dPrime <- function(sbj, expectedResp, observedResp)
{
sbjNumbers <- unique(sbj);
dprimes <- vector(length=length(sbjNumbers), mode="numeric");
log_beta <- vector(length=length(sbjNumbers), mode="numeric");
c <- vector(length=length(sbjNumbers), mode="numeric");
subjects <- vector(length=length(sbjNumbers), mode="integer");
counter <- 1;
for (s in sbjNumbers)
{
contingencyTable <- xtabs(~ expectedResp[sbj==s] + observedResp[sbj==s]);
percVector <- contingencyTable[,2] / xtabs(~ expectedResp[sbj==s]);
nTrials <- length(expectedResp);
zhr <- ifelse( percVector[2]==1, qnorm( 1-(1/(2*nTrials))), qnorm(percVector[2]));
zfar <- ifelse(percVector[1]==0, qnorm( 1/(2*nTrials) ), qnorm(percVector[1]));
dprimes[counter] <- round(zhr - zfar, digits = 3);
log_beta[counter] <- round((zfar^2 - zhr^2)/2, digits = 3); #this is taken from Stanislaw and Todorov, PBR 1999. Log_beta=0 indicates no bias; negative values is bias for YES; positive values is bias for NO
c[counter] <- round( -(zhr + zfar)/2, digits = 3); # this is taken again from Stanislaw and Todorov, PBR 1999, who note that c "...assumes that subjects respond yes when the decision variable exceeds the criterion and no otherwise; responses are based directly on the decision variable, which some researchers regard as more plausible than assuming that responses are based on a likelihood ratio [which the assumption behind beta] (Richardson, 1994). Another advantage of c is that it is unaffected by changes in d', whereas {3 is not (Ingham, 1970; Macmil- lan, 1993; McNicol, 1972, pp. 63--64)". Similarly to log_beta, c=0 is no bias, negative c is bias for YES, negative c is bias for NO.
subjects[counter] <- s;
counter <- counter + 1;
};
print(data.frame(sbj=subjects, dprime=dprimes, log_beta=log_beta, c=c));
}
dprimes <- dPrime(all_data$sbjID, all_data$expected, all_data$observed);
summary(dprimes);
dim(dprimes);
dim(all_data);
# Pilot 1 BLP data
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Pilot1_data");
BLP_data_pilot1 <- read.table("BLP_preprocessed_pilot1.csv",header=T,sep=",");
dim(BLP_data_pilot1);
head(BLP_data_pilot1);
summary(BLP_data_pilot1);
BLP_data_pilot1$Sex <- as.factor(BLP_data_pilot1$Sex);
BLP_data_pilot1$MaxEdu <- as.factor(BLP_data_pilot1$MaxEdu);
BLP_data_pilot1$L1 <- as.factor(BLP_data_pilot1$L1);
BLP_data_pilot1$L2 <- as.factor(BLP_data_pilot1$L2);
BLP_data_pilot1$L3 <- as.factor(BLP_data_pilot1$L3);
BLP_data_pilot1$L4 <- as.factor(BLP_data_pilot1$L4);
BLP_data_pilot1$AttentionCheck <- as.factor(BLP_data_pilot1$AttentionCheck);
summary(BLP_data_pilot1);
str(BLP_data_pilot1);
# remove datapoints if participant doesn't know additional languages
BLP_data_pilot1$langfilter1 <- TRUE;
BLP_data_pilot1$langfilter2 <- TRUE;
BLP_data_pilot1$langfilter3 <- TRUE;
BLP_data_pilot1$langfilter4 <- TRUE;
BLP_data_pilot1$langfilter2[BLP_data_pilot1$L2Score==0] <- FALSE;
BLP_data_pilot1$langfilter3[BLP_data_pilot1$L3Score==0] <- FALSE;
BLP_data_pilot1$langfilter4[BLP_data_pilot1$L4Score==0] <- FALSE;
BLP_data_pilot1$L2Score[BLP_data_pilot1$langfilter2==FALSE] <- NA;
BLP_data_pilot1$L3Score[BLP_data_pilot1$langfilter3==FALSE] <- NA;
BLP_data_pilot1$L4Score[BLP_data_pilot1$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(BLP_data_pilot1$L2Score);
ok3 <- ! is.na(BLP_data_pilot1$L3Score);
ok4 <- ! is.na(BLP_data_pilot1$L4Score);
# plot language scores per participant
plot(BLP_data_pilot1$L1Score~BLP_data_pilot1$ID.partecipante,ylab="Language Score",ylim=c(0,218),xlab="Participant",main="",pch=19,cex=2,col="#F1BB7B",yaxs="i");
points(BLP_data_pilot1$L2Score~BLP_data_pilot1$ID.partecipante,subset=ok2,pch=19,cex=2,col="#FD6467");
points(BLP_data_pilot1$L3Score~BLP_data_pilot1$ID.partecipante,subset=ok3,pch=19,cex=2,col="#5B1A18");
points(BLP_data_pilot1$L4Score~BLP_data_pilot1$ID.partecipante,subset=ok4,pch=19,cex=2,col="#D67236");
legend("right",title="Language:",c("L1","L2","L3","L4"),fill=c("#F1BB7B","#FD6467","#5B1A18","#D67236"),bty = "n",
cex=0.75,y.intersp=0.5);
plot(density(data1$RT),xlim=c(0,1750),ylim=c(0,0.0055),xlab="RTs (ms)",main="",xaxt = "n",col="cadetblue");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(data2$RT),col="coral");
lines(density(data3$RT),col="darkgoldenrod");
lines(density(data4$RT),col="darkgreen");
lines(density(data5$RT),col="indianred4");
lines(density(data6$RT),col="lightslateblue");
lines(density(data7$RT),col="navy");
# Pilot 1 RTs
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,16000),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="cadetblue");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(data2$RT),col="coral");
lines(density(all_data$RT[all_data$sbjID==2]),col="coral");
lines(density(all_data$RT[all_data$sbjID==3]),col="darkgoldenrod");
lines(density(all_data$RT[all_data$sbjID==4]),col="darkgreen");
lines(density(all_data$RT[all_data$sbjID==5]),col="indianred4");
lines(density(all_data$RT[all_data$sbjID==6]),col="lightslateblue");
lines(density(all_data$RT[all_data$sbjID==7]),col="navy");
legend("topright",title="Participant:",c("1","2","3","4","5","6","7"),fill=c("cadetblue","coral","darkgoldenrod","darkgreen","indianred4","lightslateblue","navy"),bty = "n",
cex=0.75,y.intersp=0.5)
plot(density(all_data$RT[all_data$sbjID==1]),xlim=c(0,16000),ylim=c(0,0.00055),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==2]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==3]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==4]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==5]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==6]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==7]),col="#CC79A7");
legend("topright",title="Participant:",c("1","2","3","4","5","6","7"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),bty = "n",
cex=0.75,y.intersp=0.5);
plot(BLP_data_pilot1$L1Score ~ BLP_data_pilot1$ID.partecipante,
ylab = "Language Score",
ylim = c(0, 230),
xlab = "Participant",
main = "",
pch = 19,
cex = 2,
col = "#F1BB7B",
xlim = c(0,max(BLP_data_pilot1$ID.partecipante)),
yaxt = "n",
mar = c(5, 4, 4, 8) + 0.1)
axis(2, at = c(0, 50, 100, 150, 200, 230),
labels = c(0, 50, 100, 150, 200, 230))
# PILOT 2
mean_data2 <- data.frame(mean_scores2 = c(35,52.5,52.5,65,52.5,47.5,35,57.5));
boxplot(mean_data2$mean_scores2, ylab = "Accuracy score (in %)");
abline(h=50, lty=5);
summary(mean_data2$mean_scores2);
# RTs
plot(density(all_data$RT[all_data$sbjID==8]),xlim=c(0,1750),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800));
lines(density(all_data$RT[all_data$sbjID==9]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==10]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==11]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==12]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==13]),col="#D55E00");
# RTs
plot(density(all_data$RT[all_data$sbjID==8]),xlim=c(0,1750),ylim=c(0,0.0005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==9]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==10]),col="#009E73");
# RTs
plot(density(all_data$RT[all_data$sbjID==8]),xlim=c(0,16000),ylim=c(0,0.0005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,2000,4000,6000,8000,10000,12000,14000,16000));
lines(density(all_data$RT[all_data$sbjID==9]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==10]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==11]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==12]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==13]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==14]),col="#CC79A7");
lines(density(all_data$RT[all_data$sbjID==15]),col="#999999")
legend("topright",title="Participant:",c("8","9","10","11","12","13","14","15"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","#999999"),bty = "n",
cex=0.75,y.intersp=0.5)
# Pilot 2 BLP scores
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Pilot2_data");
BLP_data2 <- read.table("BLP_preprocessed_pilot2.csv",header=T,sep=",");
dim(BLP_data2);
head(BLP_data2);
summary(BLP_data2);
BLP_data2$Sex <- as.factor(BLP_data2$Sex);
BLP_data2$MaxEdu <- as.factor(BLP_data2$MaxEdu);
BLP_data2$L1 <- as.factor(BLP_data2$L1);
BLP_data2$L2 <- as.factor(BLP_data2$L2);
BLP_data2$L3 <- as.factor(BLP_data2$L3);
BLP_data2$L4 <- as.factor(BLP_data2$L4);
BLP_data2$AttentionCheck <- as.factor(BLP_data2$AttentionCheck);
summary(BLP_data2);
str(BLP_data2);
library(dplyr);
BLP_data_pilot2 <- BLP_data2 %>% filter(ID.partecipante>7);
summary(BLP_data_pilot2);
# remove datapoints if participant doesn't know additional languages
BLP_data_pilot2$langfilter1 <- TRUE;
BLP_data_pilot2$langfilter2 <- TRUE;
BLP_data_pilot2$langfilter3 <- TRUE;
BLP_data_pilot2$langfilter4 <- TRUE;
BLP_data_pilot2$langfilter2[BLP_data_pilot2$L2Score==0] <- FALSE;
BLP_data_pilot2$langfilter3[BLP_data_pilot2$L3Score==0] <- FALSE;
BLP_data_pilot2$langfilter4[BLP_data_pilot2$L4Score==0] <- FALSE;
BLP_data_pilot2$L2Score[BLP_data_pilot2$langfilter2==FALSE] <- NA;
BLP_data_pilot2$L3Score[BLP_data_pilot2$langfilter3==FALSE] <- NA;
BLP_data_pilot2$L4Score[BLP_data_pilot2$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(BLP_data_pilot2$L2Score);
ok3 <- ! is.na(BLP_data_pilot2$L3Score);
ok4 <- ! is.na(BLP_data_pilot2$L4Score);
plot(L3Score~ID.partecipante,BLP_data_pilot2,subset=ok3,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,col="#F1BB7B");
# plot language scores per participant
plot(BLP_data_pilot2$L1Score~BLP_data_pilot2$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col="#F1BB7B",yaxs="i");
points(BLP_data_pilot2$L2Score~BLP_data_pilot2$ID.partecipante,subset=ok2,pch=19,cex=2,col="#FD6467");
points(BLP_data_pilot2$L3Score~BLP_data_pilot2$ID.partecipante,subset=ok3,pch=19,cex=2,col="#5B1A18");
points(BLP_data_pilot2$L4Score~BLP_data_pilot2$ID.partecipante,subset=ok4,pch=19,cex=2,col="#D67236");
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c("#F1BB7B","#FD6467","#5B1A18","#D67236"),bty = "n",
cex=0.75,y.intersp=0.5);
# familiarity
familiarity_data_pilot2 <- read.table("preprocessed_familiarity_pilot2.tsv",header=T,sep=",");
dim(familiarity_data_pilot2);
head(familiarity_data_pilot2);
summary(familiarity_data_pilot2);
boxplot(familiarity_data_pilot2$familiarity_score, ylab = "Familiarity score");
abline(h=50, lty=5);
summary(familiarity_data_pilot2$familiarity_score)
summary(BLP_data2);
