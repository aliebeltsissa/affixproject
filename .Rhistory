cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$lang_ent); # r = 0.29
# BLP
data_pilot4.1_BLP <- subset(data_pilot4.1, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
# remove datapoints if participant doesn't know additional languages
data_pilot4.1_BLP$langfilter1 <- TRUE;
data_pilot4.1_BLP$langfilter2 <- TRUE;
data_pilot4.1_BLP$langfilter3 <- TRUE;
data_pilot4.1_BLP$langfilter4 <- TRUE;
data_pilot4.1_BLP$langfilter2[data_pilot4.1_BLP$L2Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter3[data_pilot4.1_BLP$L3Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter4[data_pilot4.1_BLP$L4Score==0] <- FALSE;
data_pilot4.1_BLP$L2Score[data_pilot4.1_BLP$langfilter2==FALSE] <- NA;
data_pilot4.1_BLP$L3Score[data_pilot4.1_BLP$langfilter3==FALSE] <- NA;
data_pilot4.1_BLP$L4Score[data_pilot4.1_BLP$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(data_pilot4.1_BLP$L2Score);
ok3 <- ! is.na(data_pilot4.1_BLP$L3Score);
ok4 <- ! is.na(data_pilot4.1_BLP$L4Score);
scores_list <- combineCols(data_pilot4.1_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.1_BLP$lang_ent <- entropies;
data_pilot4.1_BLP$lang_ent <- as.numeric(data_pilot4.1_BLP$lang_ent);
# corr of entropy & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$lang_ent); # r = 0.29
# BLP
data_pilot4.1_BLP <- subset(data_pilot4.1, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
scores_list <- combineCols(data_pilot4.1_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.1_BLP$lang_ent <- entropies;
data_pilot4.1_BLP$lang_ent <- as.numeric(data_pilot4.1_BLP$lang_ent);
# corr of entropy & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$lang_ent); # r = 0.29
View(data_pilot4.1_BLP)
# BLP
data_pilot4.1_BLP <- subset(data_pilot4.1, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
# remove datapoints if participant doesn't know additional languages
data_pilot4.1_BLP$langfilter1 <- TRUE;
data_pilot4.1_BLP$langfilter2 <- TRUE;
data_pilot4.1_BLP$langfilter3 <- TRUE;
data_pilot4.1_BLP$langfilter4 <- TRUE;
data_pilot4.1_BLP$langfilter2[data_pilot4.1_BLP$L2Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter3[data_pilot4.1_BLP$L3Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter4[data_pilot4.1_BLP$L4Score==0] <- FALSE;
data_pilot4.1_BLP$L2Score[data_pilot4.1_BLP$langfilter2==FALSE] <- NA;
data_pilot4.1_BLP$L3Score[data_pilot4.1_BLP$langfilter3==FALSE] <- NA;
data_pilot4.1_BLP$L4Score[data_pilot4.1_BLP$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(data_pilot4.1_BLP$L2Score);
ok3 <- ! is.na(data_pilot4.1_BLP$L3Score);
ok4 <- ! is.na(data_pilot4.1_BLP$L4Score);
scores_list <- combineCols(data_pilot4.1_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.1_BLP$lang_ent <- entropies;
data_pilot4.1_BLP$lang_ent <- as.numeric(data_pilot4.1_BLP$lang_ent);
# corr of entropy & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$lang_ent); # r = 0.29
plot(data_pilot4.1_BLP$lang_ent, data_pilot4.1_testing_means$x, pch=19);
# multilingual balance: variance
vars <- list();
for (i in 1:20) { # calculate variance for each participant
temp <- unlist(scores_list[i]);
var <- var(temp,na.rm=TRUE);
vars <- append(vars, var)
};
data_pilot4.1_BLP$lang_var <- vars;
data_pilot4.1_BLP$lang_var <- as.numeric(data_pilot4.1_BLP$lang_var);
# corr of variance & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$lang_var); # r = -0.01
plot(data_pilot4.1_BLP$lang_ent, data_pilot4.1_testing_means$x, xlab="Language score entropy", ylab="Testing accuracy (in %)", pch=19);
plot(data_pilot4.1_BLP$lang_ent, data_pilot4.1_testing_means$x, xlab="Language score variance", ylab="Testing accuracy (in %)", pch=19);
plot(data_pilot4.1_BLP$lang_var, data_pilot4.1_testing_means$x, xlab="Language score variance", ylab="Testing accuracy (in %)", pch=19);
# multilingual experience: summing all language scores
data_pilot4.1_BLP["L2Score"][is.na(data_pilot4.1_BLP["L2Score"])] <- 0;
data_pilot4.1_BLP["L3Score"][is.na(data_pilot4.1_BLP["L3Score"])] <- 0;
data_pilot4.1_BLP["L4Score"][is.na(data_pilot4.1_BLP["L4Score"])] <- 0;
data_pilot4.1_BLP$multi_exp <- data_pilot4.1_BLP$L1Score + data_pilot4.1_BLP$L2Score + data_pilot4.1_BLP$L3Score + data_pilot4.1_BLP$L4Score;
# L1 - L2 score
data_pilot4.1_BLP$L1_L2_diff <- data_pilot4.1_BLP$L1Score - data_pilot4.1_BLP$L2Score;
# corr of multilingual experience & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$multi_exp); # r = 0.05
# corr of L1-L2 score & accuracy
cor(data_pilot4.1_testing_means$x, data_pilot4.1_BLP$L1_L2_diff); # r = -0.15
# testing
data_pilot4.2_testing <- subset(data_pilot4.2, task=='testing',select=c(sbj_ID,task,trialn,expected,observed,correct,rt,item,testing_strategy));
# testing boxplot
data_pilot4.2_testing_means <- aggregate(data_pilot4.2_testing$correct, list(data_pilot4.2_testing$sbj_ID), FUN=sum, na.rm=TRUE);
data_pilot4.2_testing_means$x<-(data_pilot4.2_testing_means$x)*10/4;
data_pilot4.2_testing_rt_means <- aggregate(data_pilot4.2_testing$rt, list(data_pilot4.2_testing$sbj_ID), FUN=mean, na.rm=TRUE);
# testing accuracy*RTs
cor(data_pilot4.2_testing_means$x, data_pilot4.2_testing_rt_means$x); # r = 0.04
# familiarity
data_pilot4.2_familiarity <- subset(data_pilot4.2, task=='familiarity',select=c(sbj_ID,task,trialn,target,confound,expected,observed,correct,rt));
data_pilot4.2_familiarity_means <- aggregate(data_pilot4.2_familiarity$correct, list(data_pilot4.2_familiarity$sbj_ID), FUN=sum);
data_pilot4.2_familiarity_means$x<-(data_pilot4.2_familiarity_means$x)*10/3;
# familiarity RTs
IDs <- list(data_pilot4.2_familiarity$sbj_ID);
IDs <- sapply(IDs, unique);
data_pilot4.2_familiarity_rt_means <- aggregate(data_pilot4.2_familiarity$rt, list(data_pilot4.2_familiarity$sbj_ID), FUN=mean, na.rm=TRUE);
# familiarity accuracy*RTs
cor(data_pilot4.2_familiarity_means$x, data_pilot4.2_familiarity_rt_means$x); # r = 0.21
plot(data_pilot4.2_familiarity_rt_means$x, data_pilot4.2_familiarity_means$x, pch=19);
plot(data_pilot4.2_familiarity_rt_means$x, data_pilot4.2_familiarity_means$x, xlab="Mean familiarity task RTs (in ms)", ylab="Mean familiarity score (in %)", pch=19);
# BLP
data_pilot4.2_BLP <- subset(data_pilot4.2, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
# multilingual balance: variance
scores_list <- combineCols(data_pilot4.2_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
vars <- list();
for (i in 1:20) { # calculate variance for each participant
temp <- unlist(scores_list[i]);
var <- var(temp,na.rm=TRUE);
vars <- append(vars, var)
};
data_pilot4.2_BLP$lang_var <- vars;
data_pilot4.2_BLP$lang_var <- as.numeric(data_pilot4.2_BLP$lang_var);
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.2_BLP$lang_ent <- entropies;
data_pilot4.2_BLP$lang_ent <- as.numeric(data_pilot4.2_BLP$lang_ent);
# corr of variance & entropy
cor(unlist(data_pilot4.2_BLP$lang_var),unlist(data_pilot4.2_BLP$lang_ent),method="pearson"); # r = -0.85 so strongly negatively correlated
# multilingual experience: summing all language scores
data_pilot4.2_BLP["L2Score"][is.na(data_pilot4.2_BLP["L2Score"])] <- 0;
data_pilot4.2_BLP["L3Score"][is.na(data_pilot4.2_BLP["L3Score"])] <- 0;
data_pilot4.2_BLP["L4Score"][is.na(data_pilot4.2_BLP["L4Score"])] <- 0;
data_pilot4.2_BLP$multi_exp <- data_pilot4.2_BLP$L1Score + data_pilot4.2_BLP$L2Score + data_pilot4.2_BLP$L3Score + data_pilot4.2_BLP$L4Score;
plot(data_pilot4.2_BLP$temp_sbjID,data_pilot4.2_BLP$multi_exp,pch=19,xlab="Subject number",ylab="Amount of total multilingual experience (out of 872)",ylim=c(0,872),yaxs="i");
# L1 - L2 score
data_pilot4.2_BLP$L1_L2_diff <- data_pilot4.2_BLP$L1Score - data_pilot4.2_BLP$L2Score;
# corr of variance & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_var); # r = -0.35
# corr of entropy & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_ent); # r = 0.32
# corr of multilingual experience & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$multi_exp); # r = 0.44
# corr of L1-L2 score & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$L1_L2_diff) # r = -0.25
plot(data_pilot4.2_BLP$lang_var, data_pilot4.2_testing_means$x, xlab="Language score variance", ylab="Testing accuracy (in %)", pch=19);
plot(data_pilot4.2_BLP$lang_ent, data_pilot4.2_testing_means$x, xlab="Language score entropy", ylab="Testing accuracy (in %)", pch=19);
plot(data_pilot4.2_BLP$multi_exp, data_pilot4.2_testing_means$x, xlab="Amount of multilingual experience", ylab="Testing accuracy (in %)", pch=19);
plot(data_pilot4.2_BLP$L1_L2_diff, data_pilot4.2_testing_means$x, xlab="Difference between L1 and L2 score", ylab="Testing accuracy (in %)", pch=19)
# BLP
data_pilot4.2_BLP <- subset(data_pilot4.2, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
# remove datapoints if participant doesn't know additional languages
data_pilot4.2_BLP$langfilter1 <- TRUE;
data_pilot4.2_BLP$langfilter2 <- TRUE;
data_pilot4.2_BLP$langfilter3 <- TRUE;
data_pilot4.2_BLP$langfilter4 <- TRUE;
data_pilot4.2_BLP$langfilter2[data_pilot4.2_BLP$L2Score==0] <- FALSE;
data_pilot4.2_BLP$langfilter3[data_pilot4.2_BLP$L3Score==0] <- FALSE;
data_pilot4.2_BLP$langfilter4[data_pilot4.2_BLP$L4Score==0] <- FALSE;
data_pilot4.2_BLP$L2Score[data_pilot4.2_BLP$langfilter2==FALSE] <- NA;
data_pilot4.2_BLP$L3Score[data_pilot4.2_BLP$langfilter3==FALSE] <- NA;
data_pilot4.2_BLP$L4Score[data_pilot4.2_BLP$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(data_pilot4.2_BLP$L2Score);
ok3 <- ! is.na(data_pilot4.2_BLP$L3Score);
ok4 <- ! is.na(data_pilot4.2_BLP$L4Score);
scores_list <- combineCols(data_pilot4.2_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
# multilingual balance: variance
vars <- list();
for (i in 1:20) { # calculate variance for each participant
temp <- unlist(scores_list[i]);
var <- var(temp,na.rm=TRUE);
vars <- append(vars, var)
};
data_pilot4.2_BLP$lang_var <- vars;
data_pilot4.2_BLP$lang_var <- as.numeric(data_pilot4.2_BLP$lang_var);
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.2_BLP$lang_ent <- entropies;
data_pilot4.2_BLP$lang_ent <- as.numeric(data_pilot4.2_BLP$lang_ent);
# corr of variance & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_var); # r = -0.35
# corr of entropy & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_ent); # r = 0.32
data_pilot4.2_BLP$lang_ent
# BLP
data_pilot4.2_BLP <- subset(data_pilot4.2, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
scores_list <- combineCols(data_pilot4.2_BLP, cols=c('L1Score','L2Score','L3Score','L4Score'),by_name=TRUE); # combine scores into 1 list
# multilingual balance: variance
vars <- list();
for (i in 1:20) { # calculate variance for each participant
temp <- unlist(scores_list[i]);
var <- var(temp,na.rm=TRUE);
vars <- append(vars, var)
};
data_pilot4.2_BLP$lang_var <- vars;
data_pilot4.2_BLP$lang_var <- as.numeric(data_pilot4.2_BLP$lang_var);
# multilingual balance: entropy
entropies <- list();
for (i in 1:20) { # calculate entropy for each participant
temp <- unlist(scores_list[i]);
entropy <- Entropy(table(temp,useNA = "no"));
entropies <- append(entropies, entropy)
};
data_pilot4.2_BLP$lang_ent <- entropies;
data_pilot4.2_BLP$lang_ent <- as.numeric(data_pilot4.2_BLP$lang_ent);
# corr of variance & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_var); # r = -0.35
# corr of entropy & accuracy
cor(data_pilot4.2_testing_means$x, data_pilot4.2_BLP$lang_ent); # r = 0.32 with 0s, r = 0.37 with NAs
data_pilot4.2_BLP$lang_ent
plot(data_pilot4.2_BLP$lang_ent, data_pilot4.2_testing_means$x, xlab="Language score entropy", ylab="Testing accuracy (in %)", pch=19);
# plot language scores per participant
data_pilot4.1_BLP$temp_sbjID <- c(1:20); # necessary: R doesn't like format of Prolific IDs
plot(data_pilot4.1_BLP$L1Score~data_pilot4.1_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col=cols[1],xaxt="n",yaxs="i");
cols <- paletteer_d("ggthemes::Classic_20");
# plot language scores per participant
data_pilot4.1_BLP$temp_sbjID <- c(1:20); # necessary: R doesn't like format of Prolific IDs
plot(data_pilot4.1_BLP$L1Score~data_pilot4.1_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col=cols[1],xaxt="n",yaxs="i");
axis(1, at = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));
points(data_pilot4.1_BLP$L2Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[2]);
points(data_pilot4.1_BLP$L3Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[3]);
points(data_pilot4.1_BLP$L4Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[4]);
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c(cols[1],cols[2],cols[3],cols[4]),bty = "n",
cex=0.75,y.intersp=0.5);
abline(h=218, lty=5);
# remove datapoints if participant doesn't know additional languages
data_pilot4.1_BLP$langfilter1 <- TRUE;
data_pilot4.1_BLP$langfilter2 <- TRUE;
data_pilot4.1_BLP$langfilter3 <- TRUE;
data_pilot4.1_BLP$langfilter4 <- TRUE;
data_pilot4.1_BLP$langfilter2[data_pilot4.1_BLP$L2Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter3[data_pilot4.1_BLP$L3Score==0] <- FALSE;
data_pilot4.1_BLP$langfilter4[data_pilot4.1_BLP$L4Score==0] <- FALSE;
data_pilot4.1_BLP$L2Score[data_pilot4.1_BLP$langfilter2==FALSE] <- NA;
data_pilot4.1_BLP$L3Score[data_pilot4.1_BLP$langfilter3==FALSE] <- NA;
data_pilot4.1_BLP$L4Score[data_pilot4.1_BLP$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(data_pilot4.1_BLP$L2Score);
ok3 <- ! is.na(data_pilot4.1_BLP$L3Score);
ok4 <- ! is.na(data_pilot4.1_BLP$L4Score);
# plot language scores per participant
data_pilot4.1_BLP$temp_sbjID <- c(1:20); # necessary: R doesn't like format of Prolific IDs
plot(data_pilot4.1_BLP$L1Score~data_pilot4.1_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col=cols[1],xaxt="n",yaxs="i");
axis(1, at = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));
points(data_pilot4.1_BLP$L2Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[2]);
points(data_pilot4.1_BLP$L3Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[3]);
points(data_pilot4.1_BLP$L4Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[4]);
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c(cols[1],cols[2],cols[3],cols[4]),bty = "n",
cex=0.75,y.intersp=0.5);
abline(h=218, lty=5);
# plot language scores per participant
data_pilot4.1_BLP$temp_sbjID <- c(1:20); # necessary: R doesn't like format of Prolific IDs
plot(data_pilot4.1_BLP$L1Score~data_pilot4.1_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col=cols[1],xaxt="n",yaxs="i");
axis(1, at = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));
points(data_pilot4.1_BLP$L2Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[2]);
points(data_pilot4.1_BLP$L3Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[3]);
points(data_pilot4.1_BLP$L4Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[4]);
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c(cols[1],cols[2],cols[3],cols[4]),bty = "n",
cex=1,y.intersp=0.5);
abline(h=218, lty=5);
plot(data_pilot4.1_BLP$L1Score~data_pilot4.1_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,cex.lab=1.5,col=cols[1],xaxt="n",yaxs="i");
axis(1, at = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));
points(data_pilot4.1_BLP$L2Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[2]);
points(data_pilot4.1_BLP$L3Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[3]);
points(data_pilot4.1_BLP$L4Score~data_pilot4.1_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[4]);
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c(cols[1],cols[2],cols[3],cols[4]),bty = "n",
cex=1,y.intersp=0.5);
abline(h=218, lty=5);
# BLP
data_pilot4.2_BLP <- subset(data_pilot4.2, task=='BLP',select=-c(trialn,target,confound,expected,observed,correct,rt,item));
# remove datapoints if participant doesn't know additional languages
data_pilot4.2_BLP$langfilter1 <- TRUE;
data_pilot4.2_BLP$langfilter2 <- TRUE;
data_pilot4.2_BLP$langfilter3 <- TRUE;
data_pilot4.2_BLP$langfilter4 <- TRUE;
data_pilot4.2_BLP$langfilter2[data_pilot4.2_BLP$L2Score==0] <- FALSE;
data_pilot4.2_BLP$langfilter3[data_pilot4.2_BLP$L3Score==0] <- FALSE;
data_pilot4.2_BLP$langfilter4[data_pilot4.2_BLP$L4Score==0] <- FALSE;
data_pilot4.2_BLP$L2Score[data_pilot4.2_BLP$langfilter2==FALSE] <- NA;
data_pilot4.2_BLP$L3Score[data_pilot4.2_BLP$langfilter3==FALSE] <- NA;
data_pilot4.2_BLP$L4Score[data_pilot4.2_BLP$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(data_pilot4.2_BLP$L2Score);
ok3 <- ! is.na(data_pilot4.2_BLP$L3Score);
ok4 <- ! is.na(data_pilot4.2_BLP$L4Score);
# plot language scores per participant
data_pilot4.2_BLP$temp_sbjID <- c(1:20) # necessary: R doesn't like format of Prolific IDs
plot(data_pilot4.2_BLP$L1Score~data_pilot4.2_BLP$temp_sbjID,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,cex.lab=1.5,col=cols[1],xaxt="n",yaxs="i");
axis(1, at = c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20));
points(data_pilot4.2_BLP$L2Score~data_pilot4.2_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[2]);
points(data_pilot4.2_BLP$L3Score~data_pilot4.2_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[3]);
points(data_pilot4.2_BLP$L4Score~data_pilot4.2_BLP$temp_sbjID,subset=ok2,pch=19,cex=2,col=cols[4]);
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c(cols[1],cols[2],cols[3],cols[4]),bty = "n",
cex=1,y.intersp=0.5);
abline(h=218,lty=5)
# Pilot 3 BLP scores
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Pilot3_data");
BLP_data3 <- read.table("BLP_preprocessed_pilot3.csv",header=T,sep=",");
BLP_data3$Sex <- as.factor(BLP_data3$Sex);
BLP_data3$MaxEdu <- as.factor(BLP_data3$MaxEdu);
BLP_data3$L1 <- as.factor(BLP_data3$L1);
BLP_data3$L2 <- as.factor(BLP_data3$L2);
BLP_data3$L3 <- as.factor(BLP_data3$L3);
BLP_data3$L4 <- as.factor(BLP_data3$L4);
BLP_data3$AttentionCheck <- as.factor(BLP_data3$AttentionCheck);
library(dplyr);
BLP_data_pilot3 <- BLP_data3 %>% filter(ID.partecipante>15);
# remove datapoints if participant doesn't know additional languages
BLP_data_pilot3$langfilter1 <- TRUE;
BLP_data_pilot3$langfilter2 <- TRUE;
BLP_data_pilot3$langfilter3 <- TRUE;
BLP_data_pilot3$langfilter4 <- TRUE;
BLP_data_pilot3$langfilter2[BLP_data_pilot3$L2Score==0] <- FALSE;
BLP_data_pilot3$langfilter3[BLP_data_pilot3$L3Score==0] <- FALSE;
BLP_data_pilot3$langfilter4[BLP_data_pilot3$L4Score==0] <- FALSE;
BLP_data_pilot3$L2Score[BLP_data_pilot3$langfilter2==FALSE] <- NA;
BLP_data_pilot3$L3Score[BLP_data_pilot3$langfilter3==FALSE] <- NA;
BLP_data_pilot3$L4Score[BLP_data_pilot3$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(BLP_data_pilot3$L2Score);
ok3 <- ! is.na(BLP_data_pilot3$L3Score);
ok4 <- ! is.na(BLP_data_pilot3$L4Score);
# plot language scores per participant
plot(BLP_data_pilot3$L1Score~BLP_data_pilot3$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col="#F1BB7B",yaxs="i");
points(BLP_data_pilot3$L2Score~BLP_data_pilot3$ID.partecipante,subset=ok2,pch=19,cex=2,col="#FD6467");
points(BLP_data_pilot3$L3Score~BLP_data_pilot3$ID.partecipante,subset=ok3,pch=19,cex=2,col="#5B1A18");
points(BLP_data_pilot3$L4Score~BLP_data_pilot3$ID.partecipante,subset=ok4,pch=19,cex=2,col="#D67236");
legend("topright",title="Language:",c("L1","L2","L3","L4"),fill=c("#F1BB7B","#FD6467","#5B1A18","#D67236"),bty = "n",
cex=0.75,y.intersp=0.5);
cols
# plot language scores per participant
plot(BLP_data_pilot3$L1Score~BLP_data_pilot3$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,cex.labels=1.5,col="#1F77B4FF",yaxs="i");
points(BLP_data_pilot3$L2Score~BLP_data_pilot3$ID.partecipante,subset=ok2,pch=19,cex=2,col="#AEC7E8FF");
points(BLP_data_pilot3$L3Score~BLP_data_pilot3$ID.partecipante,subset=ok3,pch=19,cex=2,col="#FF7F0EFF");
points(BLP_data_pilot3$L4Score~BLP_data_pilot3$ID.partecipante,subset=ok4,pch=19,cex=2,col="#FFBB78FF");
legend("topright",title="Language:",c("L1","L2","L3","L4"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF"),bty = "n",
cex=0.75,y.intersp=0.5);
legend("right",title="Language:",c("L1","L2","L3","L4"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF"),bty = "n",
cex=0.75,y.intersp=0.5);
# plot language scores per participant
plot(BLP_data_pilot3$L1Score~BLP_data_pilot3$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,cex.labels=1.5,col="#1F77B4FF",yaxs="i");
points(BLP_data_pilot3$L2Score~BLP_data_pilot3$ID.partecipante,subset=ok2,pch=19,cex=2,col="#AEC7E8FF");
points(BLP_data_pilot3$L3Score~BLP_data_pilot3$ID.partecipante,subset=ok3,pch=19,cex=2,col="#FF7F0EFF");
points(BLP_data_pilot3$L4Score~BLP_data_pilot3$ID.partecipante,subset=ok4,pch=19,cex=2,col="#FFBB78FF");
legend("right",title="Language:",c("L1","L2","L3","L4"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF"),bty = "n",
cex=0.75,y.intersp=0.5);
aline(h=218, lty=5);
abline(h=218, lty=5);
# Pilot 3 accuracy boxplot
mean_data3 <- data.frame(mean_scores3 = c(50,57.5,40,50,52.5,50,57.5));
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
# import participant files
all_data = data.frame()
all_data2 = data.frame()
for (x in 22:1) { # for 22 participants
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",main="",xaxt = "n",col="#1F77B4FF",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#AEC7E8FF");
lines(density(all_data$RT[all_data$sbjID==18]),col="#FF7F0EFF");
lines(density(all_data$RT[all_data$sbjID==19]),col="#FFBB78FF");
lines(density(all_data$RT[all_data$sbjID==20]),col="#2CA02CFF");
lines(density(all_data$RT[all_data$sbjID==21]),col="#98DF8AFF");
lines(density(all_data$RT[all_data$sbjID==22]),col="#D62728FF");
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF","#2CA02CFF","#98DF8AFF","#D62728FF"),bty = "n",
cex=0.75,y.intersp=0.5)
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",main="",xaxt = "n",col="#1F77B4FF",yaxs="i",lwd=2);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#AEC7E8FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==18]),col="#FF7F0EFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==19]),col="#FFBB78FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==20]),col="#2CA02CFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==21]),col="#98DF8AFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==22]),col="#D62728FF",lwd=2);
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF","#2CA02CFF","#98DF8AFF","#D62728FF"),bty = "n",
cex=0.75,y.intersp=0.5)
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2);
###########
# PILOT 4 #
###########
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject")
data_pilot4 <- read.csv("Prolific_preprocessed.csv",header=T,sep=",");
data_pilot4 = subset(data_pilot4, select = -c(X)) # remove redundant column added by Pavlovia
# make some variables factors
data_pilot4$sbj_ID <- as.factor(data_pilot4$sbj_ID);
data_pilot4$task <- as.factor(data_pilot4$task);
data_pilot4$target <- as.factor(data_pilot4$target);
data_pilot4$confound <- as.factor(data_pilot4$confound);
data_pilot4$item <- as.factor(data_pilot4$item);
data_pilot4$correct <- as.logical(data_pilot4$correct);
data_pilot4$Sex <- as.factor(data_pilot4$Sex);
data_pilot4$Education <- as.factor(data_pilot4$Education);
data_pilot4$L1 <- as.factor(data_pilot4$L1);
data_pilot4$L2 <- as.factor(data_pilot4$L2);
data_pilot4$L3 <- as.factor(data_pilot4$L3);
data_pilot4$L4 <- as.factor(data_pilot4$L4);
data_pilot4$otherLs <- as.factor(data_pilot4$otherLs);
data_pilot4$AttentionL1 <- as.factor(data_pilot4$AttentionL1);
data_pilot4$AttentionL2 <- as.factor(data_pilot4$AttentionL2);
data_pilot4$AttentionL3 <- as.factor(data_pilot4$AttentionL3);
data_pilot4$AttentionL4 <- as.factor(data_pilot4$AttentionL4);
# split into different pilot 4 versions: 4.1 is with 4 training reps, 4.1 is with 8
data_pilot4.1 <- subset(data_pilot4, sbj_ID=='5fb7b8880045d6396a86c803'|sbj_ID=='5f4cc4ea00dba58ecd5a98a4'|sbj_ID=='615c43b800752a4f3d0fd1f0'|sbj_ID=='6175a0a52e748285b3476b27'|sbj_ID=='60b55a6d44e17d6f0b810cdd'|sbj_ID=='60d87fdab51e54fe4863f97f'|sbj_ID=='60ba2011cd8052508d401296'|sbj_ID=='5ee7b7c9eef92207297a0ad4'|sbj_ID=='614060a52d7c64c27ef9887c'|sbj_ID=='5d97c38dce449e001244dc15'|sbj_ID=='5ed54d02957bee0c0de36cac'|sbj_ID=='61158a5c1d8390415ff117a8'|sbj_ID=='5e823b35726b2a9508db127c'|sbj_ID=='5caca6b4a9acb200011a6547'|sbj_ID=='5cf14e1eb4397d0001f94e20'|sbj_ID=='5cb4adc019ee7300189e8547'|sbj_ID=='5f3161410f87706425490ae1'|sbj_ID=='5e8783b0fde5153fbd9dca43'|sbj_ID=='60c9c6e1728092717b93abde'|sbj_ID=='5feb64b3341f42bb63200e36');
data_pilot4.2 <- subset(data_pilot4, sbj_ID=='60f1846c851ee5a978a0e015'|sbj_ID=='60fd703ecd62eb39eb07c328'|sbj_ID=='60ddf71e95896d2595f0e1a5'|sbj_ID=='605c9355001a5eb6d51e657d'|sbj_ID=='5f11ccbc1a1a2c08b4a99efb'|sbj_ID=='5fb3f38909fc360164f7c98d'|sbj_ID=='60a45e33f404ba8cb7a19cfe'|sbj_ID=='608abc6251feb3ddc3b2e01d'|sbj_ID=='608edc13472b2dbc27b369fa'|sbj_ID=='612d5712d75b6c46b4cefc63'|sbj_ID=='5e82e99b37d333a1474dda93'|sbj_ID=='613d091096ca434d703f77c5'|sbj_ID=='609568823ff056b77e565445'|sbj_ID=='5e80c7d61a07dd7b0d8f0111'|sbj_ID=='59aaf4b1321f870001d16f6c'|sbj_ID=='6048158f62550615002408af'|sbj_ID=='6161f43ddd46e845e7b3fab8'|sbj_ID=='5ec806f532fe7d2afa2e315b'|sbj_ID=='5e99d95e0f50aa04266ad4ad'|sbj_ID=='5c5e04ca6539fe00016e1afa');
# testing
data_pilot4.1_testing <- subset(data_pilot4.1, task=='testing',select=c(sbj_ID,task,trialn,expected,observed,correct,rt,item,testing_strategy));
# testing RTs
library(paletteer);
cols <- paletteer_d("ggthemes::Classic_20");
IDs <- list(data_pilot4.1_testing$sbj_ID);
IDs <- sapply(IDs, unique);
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2);
View(data_pilot4.1_testing)
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=0.75,y.intersp=0.5);
# testing
data_pilot4.2_testing <- subset(data_pilot4.2, task=='testing',select=c(sbj_ID,task,trialn,expected,observed,correct,rt,item,testing_strategy));
# testing RTs
IDs <- list(data_pilot4.2_testing$sbj_ID);
IDs <- sapply(IDs, unique);
plot(density(data_pilot4.2_testing$rt[data_pilot4.2_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.0035),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.2_testing$rt[data_pilot4.2_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=0.75,y.intersp=0.5);
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",cex.labels=1.5,main="",xaxt = "n",col="#1F77B4FF",yaxs="i",lwd=2);
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",cex.lab=1.5,main="",xaxt = "n",col="#1F77B4FF",yaxs="i",lwd=2);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#AEC7E8FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==18]),col="#FF7F0EFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==19]),col="#FFBB78FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==20]),col="#2CA02CFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==21]),col="#98DF8AFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==22]),col="#D62728FF",lwd=2);
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF","#2CA02CFF","#98DF8AFF","#D62728FF"),bty = "n",
cex=0.75,y.intersp=0.5)
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",cex.lab=1.5,main="",xaxt = "n",col="#1F77B4FF",yaxs="i",lwd=2);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#AEC7E8FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==18]),col="#FF7F0EFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==19]),col="#FFBB78FF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==20]),col="#2CA02CFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==21]),col="#98DF8AFF",lwd=2);
lines(density(all_data$RT[all_data$sbjID==22]),col="#D62728FF",lwd=2);
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#1F77B4FF","#AEC7E8FF","#FF7F0EFF","#FFBB78FF","#2CA02CFF","#98DF8AFF","#D62728FF"),bty = "n",
cex=1,y.intersp=0.5)
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2,cex.lab=1.5);
IDs <- list(data_pilot4.1_testing$sbj_ID);
IDs <- sapply(IDs, unique);
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2,cex.lab=1.5);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=1,y.intersp=0.5);
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2,cex.lab=1.5);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=0.9,y.intersp=0.5);
plot(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2,cex.lab=1.5);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.1_testing$rt[data_pilot4.1_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=0.85,y.intersp=0.5);
# testing RTs
IDs <- list(data_pilot4.2_testing$sbj_ID);
IDs <- sapply(IDs, unique);
plot(density(data_pilot4.2_testing$rt[data_pilot4.2_testing$sbj_ID==IDs[1]],na.rm=TRUE),xlim=c(0,2200),ylim=c(0,0.0035),xlab="RTs (ms)",main="",xaxt = "n",col=cols[1],yaxs="i",lwd=2,cex.lab=1.5);
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
for (x in 2:20) {
lines(density(data_pilot4.2_testing$rt[data_pilot4.2_testing$sbj_ID==IDs[x]],na.rm=TRUE),col=cols[x],lwd=2)
};
legend("topright",title="Participant:",legend=c(1:20),fill=cols,bty = "n",
cex=0.85,y.intersp=0.5);
