theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
sem<-data.frame(Mean=c(69.66,49.83),
sd=c(2.45,2.29),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
sem2 <- ggplot(sem, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Semantic condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(cog2, con2, int2, sem2,
ncol = 2, nrow = 2)
bi<-data.frame(Mean=c(84.07,38.69,52.41,69.66),
sd=c(12.22,17.54,16.74,13.21),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
bi2<-ggplot(bi, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Bilinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
bi2
mono<-data.frame(Mean=c(79.83,47.13,57.39,49.83),
sd=c(3.26,2.73,2.31,2.29),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
mono2 <- ggplot(mono, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Monolinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(bi2, mono2,
ncol = 1, nrow = 2)
bi<-data.frame(Mean=c(84.07,38.69,52.41,69.66),
sd=c(2.27,3.26,3.11,2.45),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
bi<-data.frame(Mean=c(84.07,38.69,52.41,69.66),
sd=c(2.27,3.26,3.11,2.45),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
bi2<-ggplot(bi, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Bilinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
bi2
mono<-data.frame(Mean=c(79.83,47.13,57.39,49.83),
sd=c(3.26,2.73,2.31,2.29),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
mono2 <- ggplot(mono, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Monolinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(bi2, mono2,
ncol = 1, nrow = 2)
cog<-data.frame(Mean=c(72.72,72.03),
sd=c(2.46,2.50),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
cog2 <- ggplot(cog, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Cognate condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
con<-data.frame(Mean=c(50.93,50.02),
sd=c(3.13,3.56),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
con2 <- ggplot(con, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Control condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
int<-data.frame(Mean=c(60.07,59.55),
sd=c(2.68,2.82),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
int2 <- ggplot(int, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Interlingual Homophone condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
sem<-data.frame(Mean=c(66.62,2.57),
sd=c(51.28,3.32),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
sem2 <- ggplot(sem, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Semantic condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(cog2, con2, int2, sem2,
ncol = 2, nrow = 2)
sem<-data.frame(Mean=c(66.62,51.28),
sd=c(2.57,3.32),
Type=as.factor(c("Bilingual","Monolingual")),
Category=c("Bilingual","Monolingual"),
Insert= c(0.0, 0.5))
sem2 <- ggplot(sem, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#999999", "#646464")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Semantic condition") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(cog2, con2, int2, sem2,
ncol = 2, nrow = 2)
bi<-data.frame(Mean=c(72.72,50.93,60.07,66.62),
sd=c(2.46,3.13,2.68,2.57),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
bi2<-ggplot(bi, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Bilinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
mono<-data.frame(Mean=c(72.03,50.02,59.55,51.28),
sd=c(2.50,3.56,2.82,3.32),
Type=as.factor(c("Cognate","Control","Interlingual Homophone","Semantic")),
Category=c("Cognate","Control","Interlingual Homophone","Semantic"),
Insert= c(0.0, 0.1, 0.5, 1))
mono2 <- ggplot(mono, aes(x=Category, y=Mean, fill=Category)) +
geom_bar(position=position_dodge(), stat="identity",
colour='black') +
geom_errorbar(aes(ymin=Mean-sd, ymax=Mean+sd), width=.2) +
scale_fill_manual(values=c("#696969", "#808080", "#a9a9a9", "#DCDCDC")) +
theme(text = element_text(family = "serif")) +
labs(y="Scores", title="Monolinguals") +
theme(legend.position = "none") +
theme(axis.title.x = element_blank()) +
theme(axis.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(0, 100)
ggarrange(bi2, mono2,
ncol = 1, nrow = 2)
summary3<-read.csv("C:/Users/annal/OneDrive - University of Sussex/School/2021-2022/Spring term - 4th year project/Data/SummaryAnalysisByParticipant3.csv")
attach(summary3)
str(summary3)
summary3 <- summary3 %>%
gather(key = "condition", value = "scores", CogDiffCon, IntDiffCon, SemDiffCon) %>%
convert_as_factor(Participant.External.Session.ID, condition)
res.aov <- aov(scores ~ condition, data = summary3)
summary4 <- summary4 %>%
gather(key = "langexp", value = "exp", Eng_yearsused, Fr_yearsused, Eng_hoursspeaking, Fr_hoursspeaking) %>%
convert_as_factor(Participant.External.Session.ID, langexp)
summary4<-read.csv("C:/Users/annal/OneDrive - University of Sussex/School/2021-2022/Spring term - 4th year project/Data/SummaryAnalysisByParticipant4.csv")
attach(summary4)
str(summary4)
summary4 <- summary4 %>%
gather(key = "condition", value = "scores", CognateLogOdds, ControlLogOdds, InterlingualHomophoneLogOdds, SemanticLogOdds) %>%
convert_as_factor(Participant.External.Session.ID, condition)
summary4 <- summary4 %>%
gather(key = "langexp", value = "exp", Eng_yearsused, Fr_yearsused, Eng_hoursspeaking, Fr_hoursspeaking) %>%
convert_as_factor(Participant.External.Session.ID, langexp)
res.aov <- summary4 %>%
anova_test(scores ~ langexp + condition)
get_anova_table(res.aov)
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
fig.path = "graphics/",
fig.width = 8,
fig.height = 4,
fig.retina = 2,
fig.align = "center",
fig.pos = "t",
collapse = TRUE
)
load("data/class5.RData");
library(lme4); #this is necessary for 'lmer'
library(rms); #this is necessary for 'rcs'
package.install(rms)
install.packages("rms")
library(rms); #this is necessary for 'rcs'
library(Hmisc)
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
fig.path = "graphics/",
fig.width = 8,
fig.height = 4,
fig.retina = 2,
fig.align = "center",
fig.pos = "t",
collapse = TRUE
)
load("data/class5.RData");
library(lme4); #this is necessary for 'lmer'
library(rms); #this is necessary for 'rcs'
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
remove.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
fig.path = "graphics/",
fig.width = 8,
fig.height = 4,
fig.retina = 2,
fig.align = "center",
fig.pos = "t",
collapse = TRUE
)
load("data/class5.RData");
library(lme4); #this is necessary for 'lmer'
library(rms); #this is necessary for 'rcs'
m4 <- lmer(rt ~ 1 + rcs(ticks,4)*condition + (1|sbjId) + (1|target), data=data_for_analysis);
summary(m4)[[10]]; #betas are quite crazy (high and low), and quite some variability. Lots of significance, but not easy to interpret. But wait before jumping there, let's check whether the non-linearity was worth it:
anova(m4,m3); #it does provide a nice improvement in goodness of fit, for the extra complexity that it costs (which is a lot, note -- 6 dfs)
#does the model fit the data better?
library(effects);
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
# import participant files
all_data = data.frame()
all_data2 = data.frame()
for (x in 21:1) { # for 21 participants
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
# initial data frame structure look
dim(all_data);
head(all_data);
summary(all_data);
all_data$response <- as.factor(all_data$response);
all_data$condition <- as.factor(all_data$condition);
# creation of expected & observed columns
all_data$expected <- 0
all_data$expected[all_data$condition == 1] <- 1
all_data$observed <- 0
all_data$observed[all_data$response == "no"] <- 1
# PILOT 3
# Pilot 3 accuracy boxplot
mean_data3 <- data.frame(mean_scores3 = c(50,57.5,40,50,52.5,50,57.5));
summary(mean_data3$mean_scores3);
boxplot(mean_data3$mean_scores3, ylab = "Accuracy score (in %)");
abline(h=50, lty=5);
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.0005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==20]),col="#0072B2");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.01),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.001),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.0001),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==20]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==21]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==22]),col="#CC79A7");
View(all_data)
View(all_data)
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
# import participant files
all_data = data.frame()
all_data2 = data.frame()
for (x in 21:1) { # for 21 participants
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Participant_Responses");
# import participant files
all_data = data.frame()
all_data2 = data.frame()
for (x in 22:1) { # for 22 participants
name <- sprintf("./Participant_%s/sbj%s_responses.tsv", x, x)
temp <- read.table(name,header=T,sep=",");
all_data <- rbind(temp,all_data2)
all_data2 <- data.frame(all_data)
}
# initial data frame structure look
dim(all_data);
head(all_data);
summary(all_data);
all_data$response <- as.factor(all_data$response);
all_data$condition <- as.factor(all_data$condition);
# creation of expected & observed columns
all_data$expected <- 0
all_data$expected[all_data$condition == 1] <- 1
all_data$observed <- 0
all_data$observed[all_data$response == "no"] <- 1
# PILOT 3
# Pilot 3 accuracy boxplot
mean_data3 <- data.frame(mean_scores3 = c(50,57.5,40,50,52.5,50,57.5));
summary(mean_data3$mean_scores3);
boxplot(mean_data3$mean_scores3, ylab = "Accuracy score (in %)");
abline(h=50, lty=5);
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.005),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==20]),col="#0072B2");
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==20]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==21]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==22]),col="#CC79A7");
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),bty = "n",
cex=0.75,y.intersp=0.5)
# Pilot 3 RTs
plot(density(all_data$RT[all_data$sbjID==16]),xlim=c(0,2200),ylim=c(0,0.003),xlab="RTs (ms)",main="",xaxt = "n",col="#E69F00",yaxs="i");
axis(1, at = c(0,200,400,600,800,1000,1200,1400,1600,1800,2000,2200));
lines(density(all_data$RT[all_data$sbjID==17]),col="#56B4E9");
lines(density(all_data$RT[all_data$sbjID==18]),col="#009E73");
lines(density(all_data$RT[all_data$sbjID==19]),col="#F0E442");
lines(density(all_data$RT[all_data$sbjID==20]),col="#0072B2");
lines(density(all_data$RT[all_data$sbjID==21]),col="#D55E00");
lines(density(all_data$RT[all_data$sbjID==22]),col="#CC79A7");
legend("topright",title="Participant:",c("16","17","18","19","20","21","22"),fill=c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7"),bty = "n",
cex=0.75,y.intersp=0.5)
summary(all_data$RT[sbjID>15])
summary(all_data$RT[all_datasbjID>15])
summary(all_data$RT[all_data$sbjID>15])
summary(all_data$RT[all_data$sbjID>16])
summary(all_data$RT[all_data$sbjID>17])
# Pilot 3 BLP scores
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Pilot3_data");
BLP_data3 <- read.table("BLP_preprocessed_pilot3.csv",header=T,sep=",");
summary(all_data$RT[all_data$sbjID>17])
BLP_data3 <- read.table("BLP_preprocessed_pilot3.csv",header=T,sep=",");
# Pilot 3 BLP scores
setwd("C:/Users/annal/OneDrive/Documents/GitHub/affixproject/Pilot3_data");
BLP_data3 <- read.table("BLP_preprocessed_pilot3.csv",header=T,sep=",");
dim(BLP_data3);
head(BLP_data3);
summary(BLP_data3$AttentionCheck)
BLP_data3$AttentionCheck
BLP_data3$Sex <- as.factor(BLP_data3$Sex);
BLP_data3$MaxEdu <- as.factor(BLP_data3$MaxEdu);
BLP_data3$L1 <- as.factor(BLP_data3$L1);
BLP_data3$L2 <- as.factor(BLP_data3$L2);
BLP_data3$L3 <- as.factor(BLP_data3$L3);
BLP_data3$L4 <- as.factor(BLP_data3$L4);
BLP_data3$AttentionCheck <- as.factor(BLP_data3$AttentionCheck);
summary(BLP_data3);
str(BLP_data3);
library(dplyr);
BLP_data_pilot3 <- BLP_data3 %>% filter(ID.partecipante>15);
summary(BLP_data_pilot3);
# remove datapoints if participant doesn't know additional languages
BLP_data_pilot3$langfilter1 <- TRUE;
BLP_data_pilot3$langfilter2 <- TRUE;
BLP_data_pilot3$langfilter3 <- TRUE;
BLP_data_pilot3$langfilter4 <- TRUE;
BLP_data_pilot3$langfilter2[BLP_data_pilot3$L2Score==0] <- FALSE;
BLP_data_pilot3$langfilter3[BLP_data_pilot3$L3Score==0] <- FALSE;
BLP_data_pilot3$langfilter4[BLP_data_pilot3$L4Score==0] <- FALSE;
BLP_data_pilot3$L2Score[BLP_data_pilot3$langfilter2==FALSE] <- NA;
BLP_data_pilot3$L3Score[BLP_data_pilot3$langfilter3==FALSE] <- NA;
BLP_data_pilot3$L4Score[BLP_data_pilot3$langfilter4==FALSE] <- NA;
ok2 <- ! is.na(BLP_data_pilot3$L2Score);
ok3 <- ! is.na(BLP_data_pilot3$L3Score);
ok4 <- ! is.na(BLP_data_pilot3$L4Score);
# plot language scores per participant
plot(BLP_data_pilot3$L1Score~BLP_data_pilot3$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col="#F1BB7B",yaxs="i");
points(BLP_data_pilot3$L2Score~BLP_data_pilot3$ID.partecipante,subset=ok2,pch=19,cex=2,col="#FD6467");
points(BLP_data_pilot3$L3Score~BLP_data_pilot3$ID.partecipante,subset=ok3,pch=19,cex=2,col="#5B1A18");
points(BLP_data_pilot3$L4Score~BLP_data_pilot3$ID.partecipante,subset=ok4,pch=19,cex=2,col="#D67236");
legend("bottomright",title="Language:",c("L1","L2","L3","L4"),fill=c("#F1BB7B","#FD6467","#5B1A18","#D67236"),bty = "n",
cex=0.75,y.intersp=0.5);
# plot language scores per participant
plot(BLP_data_pilot3$L1Score~BLP_data_pilot3$ID.partecipante,ylab="Language Score",ylim=c(0,230),xlab="Participant",main="",pch=19,cex=2,col="#F1BB7B",yaxs="i");
points(BLP_data_pilot3$L2Score~BLP_data_pilot3$ID.partecipante,subset=ok2,pch=19,cex=2,col="#FD6467");
points(BLP_data_pilot3$L3Score~BLP_data_pilot3$ID.partecipante,subset=ok3,pch=19,cex=2,col="#5B1A18");
points(BLP_data_pilot3$L4Score~BLP_data_pilot3$ID.partecipante,subset=ok4,pch=19,cex=2,col="#D67236");
legend("topright",title="Language:",c("L1","L2","L3","L4"),fill=c("#F1BB7B","#FD6467","#5B1A18","#D67236"),bty = "n",
cex=0.75,y.intersp=0.5);
# familiarity
familiarity_data_pilot3 <- read.table("preprocessed_familiarity_pilot3.tsv",header=T,sep=",");
